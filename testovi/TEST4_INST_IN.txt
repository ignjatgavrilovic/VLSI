00000000 								  ;			org 0 
00000000 01001000001000010000100000000000 ; 		xor r1 r1 r1 
00000001 00110000010000010000000000001001 ; 		addi r2 r1 9 
00000002 00000000011000100000000000000000 ; 		load r3 r2 0 
00000003 00110000010000100000000000000001 ; 		addi r2 r2 1 
00000004 00010000100000010000000000000000 ; 		mov r4 r1 
00000005 10100000000001000001100000001010 ; LOOP1:	beq r4 r3 END1 
00000006 00110000101001000000000000000001 ; 		addi r5 r4 1 
00000007 10100000000001010001100000000110 ; LOOP2:	beq r5 r3 END2 
00000008 10010000000001000000000000000000 ; 		push r4 
00000009 10010000000001010000000000000000 ; 		push r5 
0000000a 10010000000000100000000000000000 ; 		push r2 
0000000b 10000100000000010000000000010001 ; 		jsr CHG 
0000000c 00110000101001010000000000000001 ; 		addi r5 r5 1 
0000000d 10000000000000010000000000000111 ; 		jmp LOOP2 
0000000e 00110000100001000000000000000001 ; END2:	addi r4 r4 1 
0000000f 10000000000000010000000000000101 ; 		jmp LOOP1 
00000010 11111100000000000000000000000000 ; END1:	halt 
00000011 10010101000000000000000000000000 ; CHG:	pop r8 
00000012 10010101010000000000000000000000 ; 		pop r10 
00000013 10010101011000000000000000000000 ; 		pop r11 
00000014 10010101100000000000000000000000 ; 		pop r12 
00000015 10010000000010000000000000000000 ; 		push r8 
00000016 00100001011010100101100000000000 ; 		add r11 r10 r11 
00000017 00000001101010110000000000000000 ; 		load r13 r11 0 
00000018 00100001100010100110000000000000 ; 		add r12 r10 r12 
00000019 00000001110011000000000000000000 ; 		load r14 r12 0 
0000001a 10101000000011010111000000000010 ; 		bgt r13 r14 END3 
0000001b 00000100000010110111000000000000 ; 		store r11 0 r14 
0000001c 00000100000011000110100000000000 ; 		store r12 0 r13 
0000001d 10001000000000000000000000000000 ; END3:	rts 